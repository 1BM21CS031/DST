#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *next;
    struct node *pre;
};
struct node *head=NULL;

void linsert()
{
    int n;
    struct node *ptr=(struct node *)malloc(sizeof(struct node));
    if(ptr==NULL)
        printf("Overflow \n");
    else
    {
        printf("Enter Data into Double Linked List \n");
        scanf("%d",&n);
        ptr->data=n;
        if(head==NULL)
        {
            head=ptr;
            head->next=NULL;
            head->pre=NULL;
        }
        else
        {
            ptr->next=head;
            head->pre=ptr;
            ptr->pre=NULL;
            head=ptr;
        }
    }
}

void deleted()
{
    int d;
    struct node *temp=head;
    if(head==NULL)
    {
        printf("Its empty \n");
        return;
    }
    printf("Enter the data to be deleted \n\n");
    scanf("%d",&d);
    while(temp->next!=NULL)
    while(temp->data!=d)
    temp=temp->next;
    if(temp->next==NULL)
    {
        printf("Element not found");
        return;
    }
    else
    {
        if(temp==head)
    {
        head=temp->next;
        head->pre=NULL;
    }
    else if(temp->next==NULL)
    {
        temp->pre->next=NULL;
    }
    else
    {
        temp->pre->next=temp->next;
        temp->next->pre=temp->pre;
    }

    printf("%d is deleted from List \n",temp->data);
    free(temp);
    }

}

void display()
{
    struct node *temp;
    if(head==NULL)
    {
        printf("List is empty \n\n");
        return;
    }
    printf("\n");
    temp=head;
    while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }
    printf("\n");
}

int main()
{
    int ch;
    printf("Enter your choice \n");
    while(1)
    {
        printf("\n\n**MENU**\n1.Insert node \n2.Delete data \n3.Display data of Linked List \n4.Exit \n\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: linsert();
            break;
            case 2: deleted();
            break;
            case 3: display();
            break;
            case 4: exit(0);
            default: printf("Enter valid number \n");
        }
    }
    return 0;
}
